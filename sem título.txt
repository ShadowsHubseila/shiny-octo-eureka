local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/ShadowsHubseila/Magnusv5Ui/refs/heads/main/RedzV5.Lua.txt"))()

local Window = redzlib:MakeWindow({
    Title = "redz Hub : Blox Fruits",
    SubTitle = "by redz9999",
    SaveFolder = "testando | redz lib v5.lua"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://71014873973869", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

local ImunesTab = Window:MakeTab({"Proteção", "shield"})

-- =====================================================
-- REDZ HUB - SISTEMA UNIFICADO DE PROTEÇÃO E SUMIMENTO
-- =====================================================

-- Serviços
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- =====================================================
-- SISTEMA DE SUMIMENTO DE JOGADORES
-- =====================================================

-- Variáveis do sistema de sumimento
local armazenados = {}
local selectedPlayerName = ""

-- Função para encontrar jogador por nome
local function findPlayerByName(name)
    name = string.lower(name)
    for _, player in ipairs(Players:GetPlayers()) do
        if string.find(string.lower(player.Name), name) then
            return player
        end
    end
    return nil
end

-- Função para sumir jogador específico
local function sumirJogador(player)
    if player ~= LocalPlayer and player.Character and player.Character.Parent == workspace then
        armazenados[player.Name] = player.Character
        player.Character.Parent = nil
        return true
    end
    return false
end

-- Função para aparecer jogador específico
local function aparecerJogador(player)
    if armazenados[player.Name] and armazenados[player.Name] then
        armazenados[player.Name].Parent = workspace
        armazenados[player.Name] = nil
        return true
    end
    return false
end

-- =====================================================
-- SISTEMA ANTI-FLING E PROTEÇÃO
-- =====================================================

-- Função para mover objetos para backup
local function moveToBackup(obj, backupTable)
    table.insert(backupTable, { object = obj, originalParent = obj.Parent })
    obj.Parent = nil -- Remove do jogo sem destruir
end

-- Função para restaurar do backup
local function restoreFromBackup(backupTable)
    for _, data in ipairs(backupTable) do
        if data.object and data.originalParent then
            data.object.Parent = data.originalParent
        end
    end
    table.clear(backupTable)
end

-- Variáveis de backup para anti-fling
local removedVehicles, removedCanoes, removedJets, removedHelis, removedBalls = {}, {}, {}, {}, {}
local antiVehicleConnection, antiCanoeConnection, antiJetConnection, antiHeliConnection, antiBallConnection, antiSitConnection

-- =====================================================
-- INTERFACE DO REDZ HUB - SISTEMA DE SUMIMENTO
-- =====================================================

ImunesTab:AddSection({ Name = "🫥 Sistema de Sumimento de Jogadores" })
ImunesTab:AddSection({ Name = "Escolha o jogador. Para adicionar mais de um, adicione primeiro 1, apague o texto" })
ImunesTab:AddSection({ Name = "depois escolha outro e por aí vai. Use /mute (Nick) para silenciar o jogador no chat" })

-- Caixa de texto para nome do jogador
ImunesTab:AddTextBox({
    Name = "Nome do Jogador",
    Description = "Digite o nome do jogador para sumir/aparecer",
    PlaceholderText = "Digite o nome...",
    Callback = function(input)
        selectedPlayerName = input
        if input ~= "" then
            local player = findPlayerByName(input)
            if player then
                StarterGui:SetCore("SendNotification", {
                    Title = "Shad0ws ✅",
                    Text = "Jogador encontrado: " .. player.Name,
                    Duration = 3
                })
            else
                StarterGui:SetCore("SendNotification", {
                    Title = "Shad0ws ❌",
                    Text = "Jogador '" .. input .. "' não encontrado!",
                    Duration = 3
                })
                selectedPlayerName = ""
            end
        end
    end
})

-- Botão Iniciar Sumimento
ImunesTab:AddButton({
    Name = "🫥 Iniciar Sumimento",
    Description = "Faz o jogador selecionado sumir",
    Callback = function()
        if selectedPlayerName == "" then
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws ❌",
                Text = "Digite um nome na caixa primeiro!",
                Duration = 3
            })
            return
        end
        
        local player = findPlayerByName(selectedPlayerName)
        if player then
            if armazenados[player.Name] then
                StarterGui:SetCore("SendNotification", {
                    Title = "Shad0ws ⚠️",
                    Text = player.Name .. " já está sumido!",
                    Duration = 3
                })
            else
                local success = sumirJogador(player)
                if success then
                    StarterGui:SetCore("SendNotification", {
                        Title = "ImunesTab 🫥",
                        Text = "SUMIU: " .. player.Name,
                        Duration = 3
                    })
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Shad0ws ❌",
                        Text = "Não foi possível sumir " .. player.Name,
                        Duration = 3
                    })
                end
            end
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws ❌",
                Text = "Jogador não encontrado!",
                Duration = 3
            })
        end
    end
})

-- Botão Parar Sumimento
ImunesTab:AddButton({
    Name = "👁️ Parar Sumimento", 
    Description = "Faz o jogador selecionado aparecer novamente",
    Callback = function()
        if selectedPlayerName == "" then
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws ❌",
                Text = "Digite um nome na caixa primeiro!",
                Duration = 3
            })
            return
        end
        
        local player = findPlayerByName(selectedPlayerName)
        if player then
            if armazenados[player.Name] then
                local success = aparecerJogador(player)
                if success then
                    StarterGui:SetCore("SendNotification", {
                        Title = "Shad0ws 👁️",
                        Text = "APARECEU: " .. player.Name,
                        Duration = 3
                    })
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Shad0ws ❌",
                        Text = "Erro ao fazer " .. player.Name .. " aparecer",
                        Duration = 3
                    })
                end
            else
                StarterGui:SetCore("SendNotification", {
                    Title = "Shad0ws ⚠️",
                    Text = player.Name .. " não está sumido!",
                    Duration = 3
                })
            end
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws ❌",
                Text = "Jogador não encontrado!",
                Duration = 3
            })
        end
    end
})

-- Botão Aparecer Todos
ImunesTab:AddButton({
    Name = "👁️ Aparecer Todos",
    Description = "Faz TODOS os jogadores sumidos aparecerem",
    Callback = function()
        local count = 0
        for nome, character in pairs(armazenados) do
            if Players:FindFirstChild(nome) and character then
                character.Parent = workspace
                count = count + 1
            end
        end
        armazenados = {}
        
        if count > 0 then
            StarterGui:SetCore("SendNotification", {
                Title = "Jogadores Apareceu ✅",
                Text = "TODOS APARECERAM: " .. count .. " jogador(es)",
                Duration = 4
            })
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Nenhum Jogador Sumido ⚠️",
                Text = "Nenhum jogador estava sumido!",
                Duration = 3
            })
        end
    end
})

-- Botão Listar Sumidos
ImunesTab:AddButton({
    Name = "📋 Listar Sumidos",
    Description = "Mostra todos os jogadores que estão sumidos",
    Callback = function()
        local count = 0
        local names = {}
        
        for nome, _ in pairs(armazenados) do
            if Players:FindFirstChild(nome) then
                count = count + 1
                table.insert(names, nome)
            end
        end
        
        if count > 0 then
            local list = table.concat(names, ", ")
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws 📋",
                Text = count .. " sumido(s): " .. list,
                Duration = 5
            })
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Shad0ws 📋",
                Text = "Nenhum jogador está sumido!",
                Duration = 3
            })
        end
    end
})

-- =====================================================
-- INTERFACE DO REDZ HUB - SCRIPTS DE PROTEÇÃO
-- =====================================================

ImunesTab:AddSection({ Name = "🛡️ Scripts de Proteção Linux Hub" })

ImunesTab:AddButton({
    Name = "Anti Freeze",
    Description = "Proteção contra travamento",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/antbug/refs/heads/main/Main.txt"))()
        StarterGui:SetCore("SendNotification", {
            Title = "Anti Freeze ✅",
            Text = "Proteção contra freeze ativada!",
            Duration = 3
        })
    end
})

ImunesTab:AddButton({
    Name = "Anti Chaos Hub",
    Description = "Proteção contra Chaos Hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/removeplayers/main/Main.txt"))()
        StarterGui:SetCore("SendNotification", {
            Title = "Anti Chaos ✅",
            Text = "Proteção contra Chaos Hub ativada!",
            Duration = 3
        })
    end
})

ImunesTab:AddButton({
    Name = "Anti Som",
    Description = "Proteção contra spam de som",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/antsom/refs/heads/main/Main.txt"))()
        StarterGui:SetCore("SendNotification", {
            Title = "Anti Som ✅",
            Text = "Proteção contra spam de som ativada!",
            Duration = 3
        })
    end
})

-- =====================================================
-- TOGGLES ANTI-FLING
-- =====================================================

ImunesTab:AddSection({ Name = "🚫 Anti Flings" })

-- Anti Fling Veículos
ImunesTab:AddToggle({
    Name = "Anti Fling Veículos",
    Description = "Protege contra fling de veículos",
    Default = false,
    Callback = function(state)
        if state then
            antiVehicleConnection = RunService.Heartbeat:Connect(function()
                local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
                if vehiclesFolder then
                    for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
                        local isMeu = false
                        for _, seat in ipairs(vehicle:GetDescendants()) do
                            if (seat:IsA("VehicleSeat") or seat:IsA("Seat")) and seat.Occupant and seat.Occupant.Parent == LocalPlayer.Character then
                                isMeu = true
                                break
                            end
                        end
                        if not isMeu and vehicle.Parent == vehiclesFolder then
                            moveToBackup(vehicle, removedVehicles)
                        end
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Veículos ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiVehicleConnection then antiVehicleConnection:Disconnect() end
            restoreFromBackup(removedVehicles)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Veículos ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- Anti Canoe Fling
ImunesTab:AddToggle({
    Name = "Anti Canoe Fling",
    Description = "Protege contra fling de canoas",
    Default = false,
    Callback = function(state)
        if state then
            antiCanoeConnection = RunService.Heartbeat:Connect(function()
                local storage = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_CanoeStorage")
                if storage then
                    for _, canoe in ipairs(storage:GetChildren()) do
                        local dono = canoe:FindFirstChild("Owner")
                        if not dono or dono.Value ~= LocalPlayer then
                            if canoe.Parent == storage then
                                moveToBackup(canoe, removedCanoes)
                            end
                        end
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Canoe Fling ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiCanoeConnection then antiCanoeConnection:Disconnect() end
            restoreFromBackup(removedCanoes)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Canoe Fling ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- Anti Fling Jets
ImunesTab:AddToggle({
    Name = "Anti Fling Jets",
    Description = "Protege contra fling de jatos",
    Default = false,
    Callback = function(state)
        if state then
            antiJetConnection = RunService.Heartbeat:Connect(function()
                local jetFolder = Workspace:FindFirstChild("WorkspaceCom")
                if jetFolder and jetFolder:FindFirstChild("001_Airport") then
                    local storage = jetFolder["001_Airport"]:FindFirstChild("AirportHanger")
                    if storage and storage:FindFirstChild("001_JetStorage") and storage["001_JetStorage"]:FindFirstChild("JetAirport") then
                        for _, jet in ipairs(storage["001_JetStorage"].JetAirport:GetChildren()) do
                            if jet.Name ~= LocalPlayer.Name and jet.Parent == storage["001_JetStorage"].JetAirport then
                                moveToBackup(jet, removedJets)
                            end
                        end
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Jets ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiJetConnection then antiJetConnection:Disconnect() end
            restoreFromBackup(removedJets)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Jets ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- Anti Fling Helicópteros
ImunesTab:AddToggle({
    Name = "Anti Fling Helicópteros",
    Description = "Protege contra fling de helicópteros",
    Default = false,
    Callback = function(state)
        if state then
            antiHeliConnection = RunService.Heartbeat:Connect(function()
                local heliFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_HeliStorage")
                if heliFolder and heliFolder:FindFirstChild("PoliceStationHeli") then
                    for _, heli in ipairs(heliFolder.PoliceStationHeli:GetChildren()) do
                        if heli.Name ~= LocalPlayer.Name and heli.Parent == heliFolder.PoliceStationHeli then
                            moveToBackup(heli, removedHelis)
                        end
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Helicópteros ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiHeliConnection then antiHeliConnection:Disconnect() end
            restoreFromBackup(removedHelis)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Helicópteros ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- Anti Fling Ball
ImunesTab:AddToggle({
    Name = "Anti Fling Ball",
    Description = "Protege contra fling de bolas",
    Default = false,
    Callback = function(state)
        if state then
            antiBallConnection = RunService.Heartbeat:Connect(function()
                local ballFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_SoccerBalls")
                if ballFolder then
                    for _, ball in ipairs(ballFolder:GetChildren()) do
                        if ball.Parent == ballFolder then
                            moveToBackup(ball, removedBalls)
                        end
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Ball ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiBallConnection then antiBallConnection:Disconnect() end
            restoreFromBackup(removedBalls)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Ball ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- =====================================================
-- SEÇÃO ANTI SIT & ANTI LAG & ANTI FLING PORTA
-- =====================================================

ImunesTab:AddSection({ Name = "🔧 Anti Sit & Anti Lag & Anti Fling Porta" })

-- Anti Sit
ImunesTab:AddToggle({
    Name = "Anti Sit",
    Description = "Impede que você se sente",
    Default = false,
    Callback = function(state)
        if state then
            antiSitConnection = RunService.Heartbeat:Connect(function()
                local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
                    if humanoid:GetState() == Enum.HumanoidStateType.Seated then
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                    if humanoid.SeatPart then
                        humanoid.Sit = false
                        humanoid.SeatPart = nil
                    end
                end
            end)
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Sit ✅",
                Text = "Proteção ativada!",
                Duration = 3
            })
        else
            if antiSitConnection then antiSitConnection:Disconnect() end
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
            end
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Sit ❌",
                Text = "Proteção desativada!",
                Duration = 3
            })
        end
    end
})

-- Anti-Lag (Todas Tools)
ImunesTab:AddToggle({
    Name = "Anti-Lag (Todas Tools)",
    Description = "Ativa ou desativa a deduplicação de todas as ferramentas",
    Default = false,
    Callback = function(state)
        local dedupLock = {}
        local IGNORED_PLAYER -- jogador que executou

        if not state then
            StarterGui:SetCore("SendNotification", {
                Title = "Anti-Lag Tools ❌",
                Text = "Sistema desativado!",
                Duration = 3
            })
            return
        end

        -- Marca automaticamente quem executou o script
        local function marcarIgnorado(player)
            IGNORED_PLAYER = player
        end

        -- Aceita qualquer Tool
        local function isTargetTool(inst)
            return inst:IsA("Tool")
        end

        local function gatherTools(player)
            local found = {}
            local containers = {}

            if player.Character then table.insert(containers, player.Character) end
            local backpack = player:FindFirstChildOfClass("Backpack")
            if backpack then table.insert(containers, backpack) end
            local sg = player:FindFirstChild("StarterGear")
            if sg then table.insert(containers, sg) end

            for _, container in ipairs(containers) do
                for _, child in ipairs(container:GetChildren()) do
                    if isTargetTool(child) then
                        table.insert(found, child)
                    end
                end
            end

            return found
        end

        local function dedupePlayer(player)
            if player == IGNORED_PLAYER then return end
            if dedupLock[player] then return end
            dedupLock[player] = true

            local tools = gatherTools(player)
            if #tools > 1 then
                for i = 2, #tools do
                    pcall(function() tools[i]:Destroy() end)
                end
            end

            dedupLock[player] = false
        end

        local function hookPlayer(player)
            if not IGNORED_PLAYER then
                marcarIgnorado(player)
            end

            task.defer(dedupePlayer, player)

            local function setupChar(char)
                task.delay(0.5, function() dedupePlayer(player) end)
                char.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end

            if player.Character then
                setupChar(player.Character)
            end
            player.CharacterAdded:Connect(setupChar)

            local backpack = player:WaitForChild("Backpack", 10)
            if backpack then
                backpack.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end

            local sg = player:FindFirstChild("StarterGear") or player:WaitForChild("StarterGear", 10)
            if sg then
                sg.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end
        end

        Players.PlayerAdded:Connect(hookPlayer)
        for _, plr in ipairs(Players:GetPlayers()) do
            hookPlayer(plr)
        end

        -- Varredura periódica
        task.spawn(function()
            while state do
                for _, plr in ipairs(Players:GetPlayers()) do
                    dedupePlayer(plr)
                end
                task.wait(2)
            end
        end)

        StarterGui:SetCore("SendNotification", {
            Title = "Anti-Lag Tools ✅",
            Text = "Sistema de limpeza de tools ativado!",
            Duration = 3
        })
    end
})

-- Anti Fling Porta
ImunesTab:AddToggle({
    Name = "Anti Fling Porta",
    Description = "Ativa ou desativa a proteção contra fling de portas",
    Default = false,
    Callback = function(state)
        -- Cria variável persistente se não existir
        if not _G.hiddenDoors then
            _G.hiddenDoors = {}
        end
        
        if state then
            -- Limpa dados anteriores antes de começar
            _G.hiddenDoors = {}
            
            -- Ativa: esconde portas (não remove, só torna invisíveis)
            for _, obj in ipairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name:lower():find("door") then
                    -- Salva o estado original
                    local doorData = {
                        door = obj,
                        originalTransparency = obj.Transparency,
                        originalCanCollide = obj.CanCollide,
                        originalCastShadow = obj.CastShadow
                    }
                    
                    -- Esconde a porta (mantém funcionalidade)
                    obj.Transparency = 1
                    obj.CanCollide = false
                    obj.CastShadow = false
                    
                    -- Esconde filhos se houver (maçanetas, etc)
                    for _, child in ipairs(obj:GetChildren()) do
                        if child:IsA("BasePart") then
                            child.Transparency = 1
                            child.CanCollide = false
                        elseif child:IsA("SurfaceGui") or child:IsA("BillboardGui") then
                            child.Enabled = false
                        end
                    end
                    
                    table.insert(_G.hiddenDoors, doorData)
                end
            end
            
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Porta ✅",
                Text = #_G.hiddenDoors .. " portas escondidas!",
                Duration = 3
            })
            
        else
            -- Desativa: restaura portas (volta ao estado original)
            for _, doorData in ipairs(_G.hiddenDoors or {}) do
                if doorData.door and doorData.door.Parent then
                    -- Restaura propriedades originais
                    doorData.door.Transparency = doorData.originalTransparency
                    doorData.door.CanCollide = doorData.originalCanCollide
                    doorData.door.CastShadow = doorData.originalCastShadow
                    
                    -- Restaura filhos
                    for _, child in ipairs(doorData.door:GetChildren()) do
                        if child:IsA("BasePart") then
                            child.Transparency = 0
                            child.CanCollide = true
                        elseif child:IsA("SurfaceGui") or child:IsA("BillboardGui") then
                            child.Enabled = true
                        end
                    end
                end
            end
            
            StarterGui:SetCore("SendNotification", {
                Title = "Anti Fling Porta ❌",
                Text = #(_G.hiddenDoors or {}) .. " portas restauradas!",
                Duration = 3
            })
            _G.hiddenDoors = {} -- Limpa a lista
        end
    end
})

-- =====================================================
-- LIMPEZA E NOTIFICAÇÕES FINAIS
-- =====================================================

-- Limpeza automática quando jogadores saem do servidor
Players.PlayerRemoving:Connect(function(player)
    if armazenados[player.Name] then
        armazenados[player.Name] = nil
    end
end)

-- Notificação de inicialização
StarterGui:SetCore("SendNotification", {
    Title = "🛡️ Redz Hub - Sistema Unificado",
    Text = "✅ Todos os sistemas carregados com sucesso!",
    Duration = 5
})

-- Notificação adicional com instruções
wait(1)
StarterGui:SetCore("SendNotification", {
    Title = "📋 Instruções",
    Text = "Sistema de Sumimento e Proteção prontos para uso!",
    Duration = 4
})